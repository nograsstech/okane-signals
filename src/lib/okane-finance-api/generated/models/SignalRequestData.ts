/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SignalsDict } from './SignalsDict';
import {
    SignalsDictFromJSON,
    SignalsDictFromJSONTyped,
    SignalsDictToJSON,
} from './SignalsDict';

/**
 * 
 * @export
 * @interface SignalRequestData
 */
export interface SignalRequestData {
    /**
     * 
     * @type {string}
     * @memberof SignalRequestData
     */
    ticker: string;
    /**
     * 
     * @type {string}
     * @memberof SignalRequestData
     */
    period: string;
    /**
     * 
     * @type {string}
     * @memberof SignalRequestData
     */
    interval: string;
    /**
     * 
     * @type {string}
     * @memberof SignalRequestData
     */
    strategy: string;
    /**
     * 
     * @type {SignalsDict}
     * @memberof SignalRequestData
     */
    signals: SignalsDict;
}

/**
 * Check if a given object implements the SignalRequestData interface.
 */
export function instanceOfSignalRequestData(value: object): boolean {
    if (!('ticker' in value)) return false;
    if (!('period' in value)) return false;
    if (!('interval' in value)) return false;
    if (!('strategy' in value)) return false;
    if (!('signals' in value)) return false;
    return true;
}

export function SignalRequestDataFromJSON(json: any): SignalRequestData {
    return SignalRequestDataFromJSONTyped(json, false);
}

export function SignalRequestDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): SignalRequestData {
    if (json == null) {
        return json;
    }
    return {
        
        'ticker': json['ticker'],
        'period': json['period'],
        'interval': json['interval'],
        'strategy': json['strategy'],
        'signals': SignalsDictFromJSON(json['signals']),
    };
}

export function SignalRequestDataToJSON(value?: SignalRequestData | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'ticker': value['ticker'],
        'period': value['period'],
        'interval': value['interval'],
        'strategy': value['strategy'],
        'signals': SignalsDictToJSON(value['signals']),
    };
}

