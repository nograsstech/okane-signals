/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AverageDrawdownDuration } from './AverageDrawdownDuration';
import {
    AverageDrawdownDurationFromJSON,
    AverageDrawdownDurationFromJSONTyped,
    AverageDrawdownDurationToJSON,
} from './AverageDrawdownDuration';
import type { AverageDrawdownPercentage } from './AverageDrawdownPercentage';
import {
    AverageDrawdownPercentageFromJSON,
    AverageDrawdownPercentageFromJSONTyped,
    AverageDrawdownPercentageToJSON,
} from './AverageDrawdownPercentage';
import type { AverageTradeDuration } from './AverageTradeDuration';
import {
    AverageTradeDurationFromJSON,
    AverageTradeDurationFromJSONTyped,
    AverageTradeDurationToJSON,
} from './AverageTradeDuration';
import type { AvgTrade } from './AvgTrade';
import {
    AvgTradeFromJSON,
    AvgTradeFromJSONTyped,
    AvgTradeToJSON,
} from './AvgTrade';
import type { BestTrade } from './BestTrade';
import {
    BestTradeFromJSON,
    BestTradeFromJSONTyped,
    BestTradeToJSON,
} from './BestTrade';
import type { BuyAndHoldReturn } from './BuyAndHoldReturn';
import {
    BuyAndHoldReturnFromJSON,
    BuyAndHoldReturnFromJSONTyped,
    BuyAndHoldReturnToJSON,
} from './BuyAndHoldReturn';
import type { CalmarRatio } from './CalmarRatio';
import {
    CalmarRatioFromJSON,
    CalmarRatioFromJSONTyped,
    CalmarRatioToJSON,
} from './CalmarRatio';
import type { Duration } from './Duration';
import {
    DurationFromJSON,
    DurationFromJSONTyped,
    DurationToJSON,
} from './Duration';
import type { End1 } from './End1';
import {
    End1FromJSON,
    End1FromJSONTyped,
    End1ToJSON,
} from './End1';
import type { ExposureTimePercentage } from './ExposureTimePercentage';
import {
    ExposureTimePercentageFromJSON,
    ExposureTimePercentageFromJSONTyped,
    ExposureTimePercentageToJSON,
} from './ExposureTimePercentage';
import type { FinalEquity } from './FinalEquity';
import {
    FinalEquityFromJSON,
    FinalEquityFromJSONTyped,
    FinalEquityToJSON,
} from './FinalEquity';
import type { Html } from './Html';
import {
    HtmlFromJSON,
    HtmlFromJSONTyped,
    HtmlToJSON,
} from './Html';
import type { MaxDrawdownDuration } from './MaxDrawdownDuration';
import {
    MaxDrawdownDurationFromJSON,
    MaxDrawdownDurationFromJSONTyped,
    MaxDrawdownDurationToJSON,
} from './MaxDrawdownDuration';
import type { MaxDrawdownPercentage } from './MaxDrawdownPercentage';
import {
    MaxDrawdownPercentageFromJSON,
    MaxDrawdownPercentageFromJSONTyped,
    MaxDrawdownPercentageToJSON,
} from './MaxDrawdownPercentage';
import type { MaxTradeDuration } from './MaxTradeDuration';
import {
    MaxTradeDurationFromJSON,
    MaxTradeDurationFromJSONTyped,
    MaxTradeDurationToJSON,
} from './MaxTradeDuration';
import type { PeakEquity } from './PeakEquity';
import {
    PeakEquityFromJSON,
    PeakEquityFromJSONTyped,
    PeakEquityToJSON,
} from './PeakEquity';
import type { ProfitFactor } from './ProfitFactor';
import {
    ProfitFactorFromJSON,
    ProfitFactorFromJSONTyped,
    ProfitFactorToJSON,
} from './ProfitFactor';
import type { ReturnAnnualized } from './ReturnAnnualized';
import {
    ReturnAnnualizedFromJSON,
    ReturnAnnualizedFromJSONTyped,
    ReturnAnnualizedToJSON,
} from './ReturnAnnualized';
import type { ReturnPercentage } from './ReturnPercentage';
import {
    ReturnPercentageFromJSON,
    ReturnPercentageFromJSONTyped,
    ReturnPercentageToJSON,
} from './ReturnPercentage';
import type { SharpeRatio } from './SharpeRatio';
import {
    SharpeRatioFromJSON,
    SharpeRatioFromJSONTyped,
    SharpeRatioToJSON,
} from './SharpeRatio';
import type { SortinoRatio } from './SortinoRatio';
import {
    SortinoRatioFromJSON,
    SortinoRatioFromJSONTyped,
    SortinoRatioToJSON,
} from './SortinoRatio';
import type { Start1 } from './Start1';
import {
    Start1FromJSON,
    Start1FromJSONTyped,
    Start1ToJSON,
} from './Start1';
import type { Ticker } from './Ticker';
import {
    TickerFromJSON,
    TickerFromJSONTyped,
    TickerToJSON,
} from './Ticker';
import type { TradeCount } from './TradeCount';
import {
    TradeCountFromJSON,
    TradeCountFromJSONTyped,
    TradeCountToJSON,
} from './TradeCount';
import type { VolatilityAnnualized } from './VolatilityAnnualized';
import {
    VolatilityAnnualizedFromJSON,
    VolatilityAnnualizedFromJSONTyped,
    VolatilityAnnualizedToJSON,
} from './VolatilityAnnualized';
import type { WinRate } from './WinRate';
import {
    WinRateFromJSON,
    WinRateFromJSONTyped,
    WinRateToJSON,
} from './WinRate';
import type { WorstTrade } from './WorstTrade';
import {
    WorstTradeFromJSON,
    WorstTradeFromJSONTyped,
    WorstTradeToJSON,
} from './WorstTrade';

/**
 * 
 * @export
 * @interface BacktestStats
 */
export interface BacktestStats {
    /**
     * 
     * @type {Ticker}
     * @memberof BacktestStats
     */
    ticker: Ticker;
    /**
     * 
     * @type {MaxDrawdownPercentage}
     * @memberof BacktestStats
     */
    maxDrawdownPercentage: MaxDrawdownPercentage;
    /**
     * 
     * @type {Start1}
     * @memberof BacktestStats
     */
    start: Start1;
    /**
     * 
     * @type {End1}
     * @memberof BacktestStats
     */
    end: End1;
    /**
     * 
     * @type {Duration}
     * @memberof BacktestStats
     */
    duration: Duration;
    /**
     * 
     * @type {ExposureTimePercentage}
     * @memberof BacktestStats
     */
    exposureTimePercentage: ExposureTimePercentage;
    /**
     * 
     * @type {FinalEquity}
     * @memberof BacktestStats
     */
    finalEquity: FinalEquity;
    /**
     * 
     * @type {PeakEquity}
     * @memberof BacktestStats
     */
    peakEquity: PeakEquity;
    /**
     * 
     * @type {ReturnPercentage}
     * @memberof BacktestStats
     */
    returnPercentage: ReturnPercentage;
    /**
     * 
     * @type {BuyAndHoldReturn}
     * @memberof BacktestStats
     */
    buyAndHoldReturn: BuyAndHoldReturn;
    /**
     * 
     * @type {ReturnAnnualized}
     * @memberof BacktestStats
     */
    returnAnnualized: ReturnAnnualized;
    /**
     * 
     * @type {VolatilityAnnualized}
     * @memberof BacktestStats
     */
    volatilityAnnualized: VolatilityAnnualized;
    /**
     * 
     * @type {SharpeRatio}
     * @memberof BacktestStats
     */
    sharpeRatio: SharpeRatio;
    /**
     * 
     * @type {SortinoRatio}
     * @memberof BacktestStats
     */
    sortinoRatio: SortinoRatio;
    /**
     * 
     * @type {CalmarRatio}
     * @memberof BacktestStats
     */
    calmarRatio: CalmarRatio;
    /**
     * 
     * @type {AverageDrawdownPercentage}
     * @memberof BacktestStats
     */
    averageDrawdownPercentage: AverageDrawdownPercentage;
    /**
     * 
     * @type {MaxDrawdownDuration}
     * @memberof BacktestStats
     */
    maxDrawdownDuration: MaxDrawdownDuration;
    /**
     * 
     * @type {AverageDrawdownDuration}
     * @memberof BacktestStats
     */
    averageDrawdownDuration: AverageDrawdownDuration;
    /**
     * 
     * @type {TradeCount}
     * @memberof BacktestStats
     */
    tradeCount: TradeCount;
    /**
     * 
     * @type {WinRate}
     * @memberof BacktestStats
     */
    winRate: WinRate;
    /**
     * 
     * @type {BestTrade}
     * @memberof BacktestStats
     */
    bestTrade: BestTrade;
    /**
     * 
     * @type {WorstTrade}
     * @memberof BacktestStats
     */
    worstTrade: WorstTrade;
    /**
     * 
     * @type {AvgTrade}
     * @memberof BacktestStats
     */
    avgTrade: AvgTrade;
    /**
     * 
     * @type {MaxTradeDuration}
     * @memberof BacktestStats
     */
    maxTradeDuration: MaxTradeDuration;
    /**
     * 
     * @type {AverageTradeDuration}
     * @memberof BacktestStats
     */
    averageTradeDuration: AverageTradeDuration;
    /**
     * 
     * @type {ProfitFactor}
     * @memberof BacktestStats
     */
    profitFactor: ProfitFactor;
    /**
     * 
     * @type {Html}
     * @memberof BacktestStats
     */
    html: Html;
}

/**
 * Check if a given object implements the BacktestStats interface.
 */
export function instanceOfBacktestStats(value: object): boolean {
    if (!('ticker' in value)) return false;
    if (!('maxDrawdownPercentage' in value)) return false;
    if (!('start' in value)) return false;
    if (!('end' in value)) return false;
    if (!('duration' in value)) return false;
    if (!('exposureTimePercentage' in value)) return false;
    if (!('finalEquity' in value)) return false;
    if (!('peakEquity' in value)) return false;
    if (!('returnPercentage' in value)) return false;
    if (!('buyAndHoldReturn' in value)) return false;
    if (!('returnAnnualized' in value)) return false;
    if (!('volatilityAnnualized' in value)) return false;
    if (!('sharpeRatio' in value)) return false;
    if (!('sortinoRatio' in value)) return false;
    if (!('calmarRatio' in value)) return false;
    if (!('averageDrawdownPercentage' in value)) return false;
    if (!('maxDrawdownDuration' in value)) return false;
    if (!('averageDrawdownDuration' in value)) return false;
    if (!('tradeCount' in value)) return false;
    if (!('winRate' in value)) return false;
    if (!('bestTrade' in value)) return false;
    if (!('worstTrade' in value)) return false;
    if (!('avgTrade' in value)) return false;
    if (!('maxTradeDuration' in value)) return false;
    if (!('averageTradeDuration' in value)) return false;
    if (!('profitFactor' in value)) return false;
    if (!('html' in value)) return false;
    return true;
}

export function BacktestStatsFromJSON(json: any): BacktestStats {
    return BacktestStatsFromJSONTyped(json, false);
}

export function BacktestStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): BacktestStats {
    if (json == null) {
        return json;
    }
    return {
        
        'ticker': TickerFromJSON(json['ticker']),
        'maxDrawdownPercentage': MaxDrawdownPercentageFromJSON(json['max_drawdown_percentage']),
        'start': Start1FromJSON(json['start']),
        'end': End1FromJSON(json['end']),
        'duration': DurationFromJSON(json['duration']),
        'exposureTimePercentage': ExposureTimePercentageFromJSON(json['exposure_time_percentage']),
        'finalEquity': FinalEquityFromJSON(json['final_equity']),
        'peakEquity': PeakEquityFromJSON(json['peak_equity']),
        'returnPercentage': ReturnPercentageFromJSON(json['return_percentage']),
        'buyAndHoldReturn': BuyAndHoldReturnFromJSON(json['buy_and_hold_return']),
        'returnAnnualized': ReturnAnnualizedFromJSON(json['return_annualized']),
        'volatilityAnnualized': VolatilityAnnualizedFromJSON(json['volatility_annualized']),
        'sharpeRatio': SharpeRatioFromJSON(json['sharpe_ratio']),
        'sortinoRatio': SortinoRatioFromJSON(json['sortino_ratio']),
        'calmarRatio': CalmarRatioFromJSON(json['calmar_ratio']),
        'averageDrawdownPercentage': AverageDrawdownPercentageFromJSON(json['average_drawdown_percentage']),
        'maxDrawdownDuration': MaxDrawdownDurationFromJSON(json['max_drawdown_duration']),
        'averageDrawdownDuration': AverageDrawdownDurationFromJSON(json['average_drawdown_duration']),
        'tradeCount': TradeCountFromJSON(json['trade_count']),
        'winRate': WinRateFromJSON(json['win_rate']),
        'bestTrade': BestTradeFromJSON(json['best_trade']),
        'worstTrade': WorstTradeFromJSON(json['worst_trade']),
        'avgTrade': AvgTradeFromJSON(json['avg_trade']),
        'maxTradeDuration': MaxTradeDurationFromJSON(json['max_trade_duration']),
        'averageTradeDuration': AverageTradeDurationFromJSON(json['average_trade_duration']),
        'profitFactor': ProfitFactorFromJSON(json['profit_factor']),
        'html': HtmlFromJSON(json['html']),
    };
}

export function BacktestStatsToJSON(value?: BacktestStats | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'ticker': TickerToJSON(value['ticker']),
        'max_drawdown_percentage': MaxDrawdownPercentageToJSON(value['maxDrawdownPercentage']),
        'start': Start1ToJSON(value['start']),
        'end': End1ToJSON(value['end']),
        'duration': DurationToJSON(value['duration']),
        'exposure_time_percentage': ExposureTimePercentageToJSON(value['exposureTimePercentage']),
        'final_equity': FinalEquityToJSON(value['finalEquity']),
        'peak_equity': PeakEquityToJSON(value['peakEquity']),
        'return_percentage': ReturnPercentageToJSON(value['returnPercentage']),
        'buy_and_hold_return': BuyAndHoldReturnToJSON(value['buyAndHoldReturn']),
        'return_annualized': ReturnAnnualizedToJSON(value['returnAnnualized']),
        'volatility_annualized': VolatilityAnnualizedToJSON(value['volatilityAnnualized']),
        'sharpe_ratio': SharpeRatioToJSON(value['sharpeRatio']),
        'sortino_ratio': SortinoRatioToJSON(value['sortinoRatio']),
        'calmar_ratio': CalmarRatioToJSON(value['calmarRatio']),
        'average_drawdown_percentage': AverageDrawdownPercentageToJSON(value['averageDrawdownPercentage']),
        'max_drawdown_duration': MaxDrawdownDurationToJSON(value['maxDrawdownDuration']),
        'average_drawdown_duration': AverageDrawdownDurationToJSON(value['averageDrawdownDuration']),
        'trade_count': TradeCountToJSON(value['tradeCount']),
        'win_rate': WinRateToJSON(value['winRate']),
        'best_trade': BestTradeToJSON(value['bestTrade']),
        'worst_trade': WorstTradeToJSON(value['worstTrade']),
        'avg_trade': AvgTradeToJSON(value['avgTrade']),
        'max_trade_duration': MaxTradeDurationToJSON(value['maxTradeDuration']),
        'average_trade_duration': AverageTradeDurationToJSON(value['averageTradeDuration']),
        'profit_factor': ProfitFactorToJSON(value['profitFactor']),
        'html': HtmlToJSON(value['html']),
    };
}

